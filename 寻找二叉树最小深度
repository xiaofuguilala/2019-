
题目：Given a binary tree, find its minimum depth.
The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.


思路：思路是层序遍历，找到第一个左右结点都为null的情况，就返回

/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
import java.util.*;
public class Solution {
    public int run(TreeNode root) {
        //，思路是层序遍历，找到第一个左右结点都为null的情况，就返回
        if(root ==null){
            return 0;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        int count = 0,nextCount = 1,deep = 1;
        
        while(queue.size()>0){
            count++;
            TreeNode t = queue.poll();
           
             if(t.left == null && t.right==null){
                return deep;
            }
            if(t.left!=null)
                queue.add(t.left);
             if(t.right!=null)
                queue.add(t.right);
            if(count == nextCount){
                nextCount = queue.size();
                count=0;
                deep++;
                
            }
           
        }
        return deep;
    }
}
