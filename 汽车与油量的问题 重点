

There are N gas stations along a circular route, where the amount of gas at station i isgas[i].

You have a car with an unlimited gas tank and it costscost[i]of gas to travel from station i to its next station (i+1). You begin the journey with an empty tank at one of the gas stations.

Return the starting gas station's index if you can travel around the circuit once, otherwise return -1.

Note: 
The solution is guaranteed to be unique.

有N个节点，每个节点的油量为gas[i],一个加油站到另一个加油站需要油量cost[i].现在需要找出从哪一个点出发能够以足够的汽油量走一圈

 public int canCompleteCircuit(int[] gas, int[] cost) {
        //从start出发， 如果油量足够， 可以一直向后走 end++；  油量不够的时候，
        //start向后退  最终 start == end的时候，如果有解一定是当前 start所在位置
       int start = gas.length-1;
       int end = 0;
       int sum = gas[start]-cost[start];
        //环形 10 30 20 10 gas
        //    30 10 10 10 cost
        while(start > end){ //10<30
            //保证能到达下一站
            if(sum >=0){
                //环型
                sum += gas[end]-cost[end];
                ++end;
            }else{
                //回退到上一站，从上一站出发 回退30-10
                --start;
                sum += gas[start]-cost[start];
            }
        }
        
        return sum>=0?start:-1;
    }
