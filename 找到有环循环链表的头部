


 public ListNode detectCycle(ListNode head) {
        //返回循环开始的节点，首先要寻找循环，快指针和满指针，
        //如果链表中环 有n个结点，指针P1在链表上向前移动n步，然后两个指针以相同的速度向前移动。
     //当第二个指针指向环的入口结点时，第一个指针已经围绕着环走了一圈又回到了入口结点。
    //所以首先要得到环中结点的数目。 不知道为什么通不过 下面的方法能通过
       //链接：https://www.nowcoder.com/questionTerminal/6e630519bf86480296d0f1c868d425ad
//来源：牛客网

if(head == null){
            return null;
        }
        ListNode slow = head;
        ListNode fast = head;
        while(fast != null && fast.next != null){
            slow = slow.next;//慢指针走一步
            fast = fast.next.next; //快指针走两步
            if(slow == fast){//找到循环点的位置
                ListNode node1 = head;
                ListNode node2 = fast;
                //从头开始与循环点一七走，能找到开始点
                while(node1 != node2){
                    node1 = node1.next;
                    node2 = node2.next;
                }
                return node1;
            }
        }
        return null;
       
     
     
    }
