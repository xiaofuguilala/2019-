
Given a string s and a dictionary of words dict, determine if s can be segmented into a space-separated sequence of one or more dictionary words.

For example, given
s ="leetcode",
dict =["leet", "code"].

状态转移方程：
       * f(i) 表示s[0,i]是否可以分词
       * f(i) = f(j) && f(j+1,i); 0 <= j < i;

Return true because"leetcode"can be segmented as"leet code".

public boolean wordBreak2(String s, Set<String> dict) {
        int len = s.length();
        boolean[] arrays = new boolean[len + 1];
        arrays[0] = true;
        for (int i = 1; i <= len; ++i) {
            for (int j = 0; j < i; ++j) {
                //动态规划中包含三个重要的概念，最优子结构、边界、状态转移公式
                // arrays[j]子结果， dict.contains(s.substring(j, i))边界条件
                if (arrays[j] && dict.contains(s.substring(j, i))) {

                    //状态转移公式
                    arrays[i] = true;
                    break;
                }
            }
        }
        return arrays[len];
    }
